// Code generated by go-swagger; DO NOT EDIT.

package direct_debits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/openbanking-sample-apps/models"
)

// GetDirectDebitsReader is a Reader for the GetDirectDebits structure.
type GetDirectDebitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDirectDebitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDirectDebitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDirectDebitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDirectDebitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDirectDebitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDirectDebitsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDirectDebitsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetDirectDebitsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDirectDebitsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDirectDebitsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDirectDebitsOK creates a GetDirectDebitsOK with default headers values
func NewGetDirectDebitsOK() *GetDirectDebitsOK {
	return &GetDirectDebitsOK{}
}

/* GetDirectDebitsOK describes a response with status code 200, with default header values.

Direct Debits Read
*/
type GetDirectDebitsOK struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBReadDirectDebit2
}

func (o *GetDirectDebitsOK) Error() string {
	return fmt.Sprintf("[GET /direct-debits][%d] getDirectDebitsOK  %+v", 200, o.Payload)
}
func (o *GetDirectDebitsOK) GetPayload() *models.OBReadDirectDebit2 {
	return o.Payload
}

func (o *GetDirectDebitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBReadDirectDebit2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDirectDebitsBadRequest creates a GetDirectDebitsBadRequest with default headers values
func NewGetDirectDebitsBadRequest() *GetDirectDebitsBadRequest {
	return &GetDirectDebitsBadRequest{}
}

/* GetDirectDebitsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetDirectDebitsBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBErrorResponse1
}

func (o *GetDirectDebitsBadRequest) Error() string {
	return fmt.Sprintf("[GET /direct-debits][%d] getDirectDebitsBadRequest  %+v", 400, o.Payload)
}
func (o *GetDirectDebitsBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetDirectDebitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDirectDebitsUnauthorized creates a GetDirectDebitsUnauthorized with default headers values
func NewGetDirectDebitsUnauthorized() *GetDirectDebitsUnauthorized {
	return &GetDirectDebitsUnauthorized{}
}

/* GetDirectDebitsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDirectDebitsUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDirectDebitsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /direct-debits][%d] getDirectDebitsUnauthorized ", 401)
}

func (o *GetDirectDebitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDirectDebitsForbidden creates a GetDirectDebitsForbidden with default headers values
func NewGetDirectDebitsForbidden() *GetDirectDebitsForbidden {
	return &GetDirectDebitsForbidden{}
}

/* GetDirectDebitsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDirectDebitsForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBErrorResponse1
}

func (o *GetDirectDebitsForbidden) Error() string {
	return fmt.Sprintf("[GET /direct-debits][%d] getDirectDebitsForbidden  %+v", 403, o.Payload)
}
func (o *GetDirectDebitsForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetDirectDebitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDirectDebitsNotFound creates a GetDirectDebitsNotFound with default headers values
func NewGetDirectDebitsNotFound() *GetDirectDebitsNotFound {
	return &GetDirectDebitsNotFound{}
}

/* GetDirectDebitsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetDirectDebitsNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDirectDebitsNotFound) Error() string {
	return fmt.Sprintf("[GET /direct-debits][%d] getDirectDebitsNotFound ", 404)
}

func (o *GetDirectDebitsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDirectDebitsMethodNotAllowed creates a GetDirectDebitsMethodNotAllowed with default headers values
func NewGetDirectDebitsMethodNotAllowed() *GetDirectDebitsMethodNotAllowed {
	return &GetDirectDebitsMethodNotAllowed{}
}

/* GetDirectDebitsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetDirectDebitsMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDirectDebitsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /direct-debits][%d] getDirectDebitsMethodNotAllowed ", 405)
}

func (o *GetDirectDebitsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDirectDebitsNotAcceptable creates a GetDirectDebitsNotAcceptable with default headers values
func NewGetDirectDebitsNotAcceptable() *GetDirectDebitsNotAcceptable {
	return &GetDirectDebitsNotAcceptable{}
}

/* GetDirectDebitsNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type GetDirectDebitsNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDirectDebitsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /direct-debits][%d] getDirectDebitsNotAcceptable ", 406)
}

func (o *GetDirectDebitsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDirectDebitsTooManyRequests creates a GetDirectDebitsTooManyRequests with default headers values
func NewGetDirectDebitsTooManyRequests() *GetDirectDebitsTooManyRequests {
	return &GetDirectDebitsTooManyRequests{}
}

/* GetDirectDebitsTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetDirectDebitsTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDirectDebitsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /direct-debits][%d] getDirectDebitsTooManyRequests ", 429)
}

func (o *GetDirectDebitsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDirectDebitsInternalServerError creates a GetDirectDebitsInternalServerError with default headers values
func NewGetDirectDebitsInternalServerError() *GetDirectDebitsInternalServerError {
	return &GetDirectDebitsInternalServerError{}
}

/* GetDirectDebitsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDirectDebitsInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBErrorResponse1
}

func (o *GetDirectDebitsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /direct-debits][%d] getDirectDebitsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDirectDebitsInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetDirectDebitsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
