// Code generated by go-swagger; DO NOT EDIT.

package scheduled_payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/openbanking-sample-apps/models"
)

// GetScheduledPaymentsReader is a Reader for the GetScheduledPayments structure.
type GetScheduledPaymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScheduledPaymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScheduledPaymentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScheduledPaymentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScheduledPaymentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScheduledPaymentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScheduledPaymentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetScheduledPaymentsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetScheduledPaymentsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScheduledPaymentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScheduledPaymentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScheduledPaymentsOK creates a GetScheduledPaymentsOK with default headers values
func NewGetScheduledPaymentsOK() *GetScheduledPaymentsOK {
	return &GetScheduledPaymentsOK{}
}

/* GetScheduledPaymentsOK describes a response with status code 200, with default header values.

Scheduled Payments Read
*/
type GetScheduledPaymentsOK struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBReadScheduledPayment3
}

func (o *GetScheduledPaymentsOK) Error() string {
	return fmt.Sprintf("[GET /scheduled-payments][%d] getScheduledPaymentsOK  %+v", 200, o.Payload)
}
func (o *GetScheduledPaymentsOK) GetPayload() *models.OBReadScheduledPayment3 {
	return o.Payload
}

func (o *GetScheduledPaymentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBReadScheduledPayment3)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScheduledPaymentsBadRequest creates a GetScheduledPaymentsBadRequest with default headers values
func NewGetScheduledPaymentsBadRequest() *GetScheduledPaymentsBadRequest {
	return &GetScheduledPaymentsBadRequest{}
}

/* GetScheduledPaymentsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetScheduledPaymentsBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBErrorResponse1
}

func (o *GetScheduledPaymentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /scheduled-payments][%d] getScheduledPaymentsBadRequest  %+v", 400, o.Payload)
}
func (o *GetScheduledPaymentsBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetScheduledPaymentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScheduledPaymentsUnauthorized creates a GetScheduledPaymentsUnauthorized with default headers values
func NewGetScheduledPaymentsUnauthorized() *GetScheduledPaymentsUnauthorized {
	return &GetScheduledPaymentsUnauthorized{}
}

/* GetScheduledPaymentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetScheduledPaymentsUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetScheduledPaymentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /scheduled-payments][%d] getScheduledPaymentsUnauthorized ", 401)
}

func (o *GetScheduledPaymentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetScheduledPaymentsForbidden creates a GetScheduledPaymentsForbidden with default headers values
func NewGetScheduledPaymentsForbidden() *GetScheduledPaymentsForbidden {
	return &GetScheduledPaymentsForbidden{}
}

/* GetScheduledPaymentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetScheduledPaymentsForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBErrorResponse1
}

func (o *GetScheduledPaymentsForbidden) Error() string {
	return fmt.Sprintf("[GET /scheduled-payments][%d] getScheduledPaymentsForbidden  %+v", 403, o.Payload)
}
func (o *GetScheduledPaymentsForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetScheduledPaymentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScheduledPaymentsNotFound creates a GetScheduledPaymentsNotFound with default headers values
func NewGetScheduledPaymentsNotFound() *GetScheduledPaymentsNotFound {
	return &GetScheduledPaymentsNotFound{}
}

/* GetScheduledPaymentsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetScheduledPaymentsNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetScheduledPaymentsNotFound) Error() string {
	return fmt.Sprintf("[GET /scheduled-payments][%d] getScheduledPaymentsNotFound ", 404)
}

func (o *GetScheduledPaymentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetScheduledPaymentsMethodNotAllowed creates a GetScheduledPaymentsMethodNotAllowed with default headers values
func NewGetScheduledPaymentsMethodNotAllowed() *GetScheduledPaymentsMethodNotAllowed {
	return &GetScheduledPaymentsMethodNotAllowed{}
}

/* GetScheduledPaymentsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetScheduledPaymentsMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetScheduledPaymentsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /scheduled-payments][%d] getScheduledPaymentsMethodNotAllowed ", 405)
}

func (o *GetScheduledPaymentsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetScheduledPaymentsNotAcceptable creates a GetScheduledPaymentsNotAcceptable with default headers values
func NewGetScheduledPaymentsNotAcceptable() *GetScheduledPaymentsNotAcceptable {
	return &GetScheduledPaymentsNotAcceptable{}
}

/* GetScheduledPaymentsNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type GetScheduledPaymentsNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetScheduledPaymentsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /scheduled-payments][%d] getScheduledPaymentsNotAcceptable ", 406)
}

func (o *GetScheduledPaymentsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetScheduledPaymentsTooManyRequests creates a GetScheduledPaymentsTooManyRequests with default headers values
func NewGetScheduledPaymentsTooManyRequests() *GetScheduledPaymentsTooManyRequests {
	return &GetScheduledPaymentsTooManyRequests{}
}

/* GetScheduledPaymentsTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetScheduledPaymentsTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetScheduledPaymentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /scheduled-payments][%d] getScheduledPaymentsTooManyRequests ", 429)
}

func (o *GetScheduledPaymentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetScheduledPaymentsInternalServerError creates a GetScheduledPaymentsInternalServerError with default headers values
func NewGetScheduledPaymentsInternalServerError() *GetScheduledPaymentsInternalServerError {
	return &GetScheduledPaymentsInternalServerError{}
}

/* GetScheduledPaymentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetScheduledPaymentsInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBErrorResponse1
}

func (o *GetScheduledPaymentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /scheduled-payments][%d] getScheduledPaymentsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetScheduledPaymentsInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetScheduledPaymentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
