// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OBFeeCategory1Code Categorisation of fees and charges into standard categories.
//
// swagger:model OB_FeeCategory1Code
type OBFeeCategory1Code string

const (

	// OBFeeCategory1CodeFCOT captures enum value "FCOT"
	OBFeeCategory1CodeFCOT OBFeeCategory1Code = "FCOT"

	// OBFeeCategory1CodeFCRE captures enum value "FCRE"
	OBFeeCategory1CodeFCRE OBFeeCategory1Code = "FCRE"

	// OBFeeCategory1CodeFCSV captures enum value "FCSV"
	OBFeeCategory1CodeFCSV OBFeeCategory1Code = "FCSV"
)

// for schema
var oBFeeCategory1CodeEnum []interface{}

func init() {
	var res []OBFeeCategory1Code
	if err := json.Unmarshal([]byte(`["FCOT","FCRE","FCSV"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oBFeeCategory1CodeEnum = append(oBFeeCategory1CodeEnum, v)
	}
}

func (m OBFeeCategory1Code) validateOBFeeCategory1CodeEnum(path, location string, value OBFeeCategory1Code) error {
	if err := validate.EnumCase(path, location, value, oBFeeCategory1CodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this o b fee category1 code
func (m OBFeeCategory1Code) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOBFeeCategory1CodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this o b fee category1 code based on context it is used
func (m OBFeeCategory1Code) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
