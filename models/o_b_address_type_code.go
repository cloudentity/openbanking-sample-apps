// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OBAddressTypeCode Identifies the nature of the postal address.
//
// swagger:model OBAddressTypeCode
type OBAddressTypeCode string

const (

	// OBAddressTypeCodeBusiness captures enum value "Business"
	OBAddressTypeCodeBusiness OBAddressTypeCode = "Business"

	// OBAddressTypeCodeCorrespondence captures enum value "Correspondence"
	OBAddressTypeCodeCorrespondence OBAddressTypeCode = "Correspondence"

	// OBAddressTypeCodeDeliveryTo captures enum value "DeliveryTo"
	OBAddressTypeCodeDeliveryTo OBAddressTypeCode = "DeliveryTo"

	// OBAddressTypeCodeMailTo captures enum value "MailTo"
	OBAddressTypeCodeMailTo OBAddressTypeCode = "MailTo"

	// OBAddressTypeCodePOBox captures enum value "POBox"
	OBAddressTypeCodePOBox OBAddressTypeCode = "POBox"

	// OBAddressTypeCodePostal captures enum value "Postal"
	OBAddressTypeCodePostal OBAddressTypeCode = "Postal"

	// OBAddressTypeCodeResidential captures enum value "Residential"
	OBAddressTypeCodeResidential OBAddressTypeCode = "Residential"

	// OBAddressTypeCodeStatement captures enum value "Statement"
	OBAddressTypeCodeStatement OBAddressTypeCode = "Statement"
)

// for schema
var oBAddressTypeCodeEnum []interface{}

func init() {
	var res []OBAddressTypeCode
	if err := json.Unmarshal([]byte(`["Business","Correspondence","DeliveryTo","MailTo","POBox","Postal","Residential","Statement"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oBAddressTypeCodeEnum = append(oBAddressTypeCodeEnum, v)
	}
}

func (m OBAddressTypeCode) validateOBAddressTypeCodeEnum(path, location string, value OBAddressTypeCode) error {
	if err := validate.EnumCase(path, location, value, oBAddressTypeCodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this o b address type code
func (m OBAddressTypeCode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOBAddressTypeCodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this o b address type code based on context it is used
func (m OBAddressTypeCode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
