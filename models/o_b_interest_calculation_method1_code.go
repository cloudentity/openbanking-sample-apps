// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OBInterestCalculationMethod1Code Methods of calculating interest
//
// swagger:model OB_InterestCalculationMethod1Code
type OBInterestCalculationMethod1Code string

const (

	// OBInterestCalculationMethod1CodeITCO captures enum value "ITCO"
	OBInterestCalculationMethod1CodeITCO OBInterestCalculationMethod1Code = "ITCO"

	// OBInterestCalculationMethod1CodeITOT captures enum value "ITOT"
	OBInterestCalculationMethod1CodeITOT OBInterestCalculationMethod1Code = "ITOT"

	// OBInterestCalculationMethod1CodeITSI captures enum value "ITSI"
	OBInterestCalculationMethod1CodeITSI OBInterestCalculationMethod1Code = "ITSI"
)

// for schema
var oBInterestCalculationMethod1CodeEnum []interface{}

func init() {
	var res []OBInterestCalculationMethod1Code
	if err := json.Unmarshal([]byte(`["ITCO","ITOT","ITSI"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oBInterestCalculationMethod1CodeEnum = append(oBInterestCalculationMethod1CodeEnum, v)
	}
}

func (m OBInterestCalculationMethod1Code) validateOBInterestCalculationMethod1CodeEnum(path, location string, value OBInterestCalculationMethod1Code) error {
	if err := validate.EnumCase(path, location, value, oBInterestCalculationMethod1CodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this o b interest calculation method1 code
func (m OBInterestCalculationMethod1Code) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOBInterestCalculationMethod1CodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this o b interest calculation method1 code based on context it is used
func (m OBInterestCalculationMethod1Code) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
