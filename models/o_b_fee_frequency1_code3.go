// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OBFeeFrequency1Code3 How frequently the fee/charge is calculated
//
// swagger:model OB_FeeFrequency1Code_3
type OBFeeFrequency1Code3 string

const (

	// OBFeeFrequency1Code3FEAC captures enum value "FEAC"
	OBFeeFrequency1Code3FEAC OBFeeFrequency1Code3 = "FEAC"

	// OBFeeFrequency1Code3FEAO captures enum value "FEAO"
	OBFeeFrequency1Code3FEAO OBFeeFrequency1Code3 = "FEAO"

	// OBFeeFrequency1Code3FECP captures enum value "FECP"
	OBFeeFrequency1Code3FECP OBFeeFrequency1Code3 = "FECP"

	// OBFeeFrequency1Code3FEDA captures enum value "FEDA"
	OBFeeFrequency1Code3FEDA OBFeeFrequency1Code3 = "FEDA"

	// OBFeeFrequency1Code3FEHO captures enum value "FEHO"
	OBFeeFrequency1Code3FEHO OBFeeFrequency1Code3 = "FEHO"

	// OBFeeFrequency1Code3FEI captures enum value "FEI"
	OBFeeFrequency1Code3FEI OBFeeFrequency1Code3 = "FEI"

	// OBFeeFrequency1Code3FEMO captures enum value "FEMO"
	OBFeeFrequency1Code3FEMO OBFeeFrequency1Code3 = "FEMO"

	// OBFeeFrequency1Code3FEOA captures enum value "FEOA"
	OBFeeFrequency1Code3FEOA OBFeeFrequency1Code3 = "FEOA"

	// OBFeeFrequency1Code3FEOT captures enum value "FEOT"
	OBFeeFrequency1Code3FEOT OBFeeFrequency1Code3 = "FEOT"

	// OBFeeFrequency1Code3FEPC captures enum value "FEPC"
	OBFeeFrequency1Code3FEPC OBFeeFrequency1Code3 = "FEPC"

	// OBFeeFrequency1Code3FEPH captures enum value "FEPH"
	OBFeeFrequency1Code3FEPH OBFeeFrequency1Code3 = "FEPH"

	// OBFeeFrequency1Code3FEPO captures enum value "FEPO"
	OBFeeFrequency1Code3FEPO OBFeeFrequency1Code3 = "FEPO"

	// OBFeeFrequency1Code3FEPS captures enum value "FEPS"
	OBFeeFrequency1Code3FEPS OBFeeFrequency1Code3 = "FEPS"

	// OBFeeFrequency1Code3FEPT captures enum value "FEPT"
	OBFeeFrequency1Code3FEPT OBFeeFrequency1Code3 = "FEPT"

	// OBFeeFrequency1Code3FEPTA captures enum value "FEPTA"
	OBFeeFrequency1Code3FEPTA OBFeeFrequency1Code3 = "FEPTA"

	// OBFeeFrequency1Code3FEPTP captures enum value "FEPTP"
	OBFeeFrequency1Code3FEPTP OBFeeFrequency1Code3 = "FEPTP"

	// OBFeeFrequency1Code3FEQU captures enum value "FEQU"
	OBFeeFrequency1Code3FEQU OBFeeFrequency1Code3 = "FEQU"

	// OBFeeFrequency1Code3FESM captures enum value "FESM"
	OBFeeFrequency1Code3FESM OBFeeFrequency1Code3 = "FESM"

	// OBFeeFrequency1Code3FEST captures enum value "FEST"
	OBFeeFrequency1Code3FEST OBFeeFrequency1Code3 = "FEST"

	// OBFeeFrequency1Code3FEWE captures enum value "FEWE"
	OBFeeFrequency1Code3FEWE OBFeeFrequency1Code3 = "FEWE"

	// OBFeeFrequency1Code3FEYE captures enum value "FEYE"
	OBFeeFrequency1Code3FEYE OBFeeFrequency1Code3 = "FEYE"
)

// for schema
var oBFeeFrequency1Code3Enum []interface{}

func init() {
	var res []OBFeeFrequency1Code3
	if err := json.Unmarshal([]byte(`["FEAC","FEAO","FECP","FEDA","FEHO","FEI","FEMO","FEOA","FEOT","FEPC","FEPH","FEPO","FEPS","FEPT","FEPTA","FEPTP","FEQU","FESM","FEST","FEWE","FEYE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oBFeeFrequency1Code3Enum = append(oBFeeFrequency1Code3Enum, v)
	}
}

func (m OBFeeFrequency1Code3) validateOBFeeFrequency1Code3Enum(path, location string, value OBFeeFrequency1Code3) error {
	if err := validate.EnumCase(path, location, value, oBFeeFrequency1Code3Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this o b fee frequency1 code 3
func (m OBFeeFrequency1Code3) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOBFeeFrequency1Code3Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this o b fee frequency1 code 3 based on context it is used
func (m OBFeeFrequency1Code3) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
