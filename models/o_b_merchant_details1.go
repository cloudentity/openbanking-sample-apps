// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OBMerchantDetails1 Details of the merchant involved in the transaction.
//
// swagger:model OBMerchantDetails1
type OBMerchantDetails1 struct {

	// Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.
	// Max Length: 4
	// Min Length: 3
	MerchantCategoryCode string `json:"MerchantCategoryCode,omitempty"`

	// Name by which the merchant is known.
	// Max Length: 350
	// Min Length: 1
	MerchantName string `json:"MerchantName,omitempty"`
}

// Validate validates this o b merchant details1
func (m *OBMerchantDetails1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMerchantCategoryCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMerchantName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OBMerchantDetails1) validateMerchantCategoryCode(formats strfmt.Registry) error {
	if swag.IsZero(m.MerchantCategoryCode) { // not required
		return nil
	}

	if err := validate.MinLength("MerchantCategoryCode", "body", m.MerchantCategoryCode, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("MerchantCategoryCode", "body", m.MerchantCategoryCode, 4); err != nil {
		return err
	}

	return nil
}

func (m *OBMerchantDetails1) validateMerchantName(formats strfmt.Registry) error {
	if swag.IsZero(m.MerchantName) { // not required
		return nil
	}

	if err := validate.MinLength("MerchantName", "body", m.MerchantName, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("MerchantName", "body", m.MerchantName, 350); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this o b merchant details1 based on context it is used
func (m *OBMerchantDetails1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OBMerchantDetails1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OBMerchantDetails1) UnmarshalBinary(b []byte) error {
	var res OBMerchantDetails1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
