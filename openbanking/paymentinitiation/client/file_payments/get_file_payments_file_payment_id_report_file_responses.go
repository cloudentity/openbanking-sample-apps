// Code generated by go-swagger; DO NOT EDIT.

package file_payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/models"
)

// GetFilePaymentsFilePaymentIDReportFileReader is a Reader for the GetFilePaymentsFilePaymentIDReportFile structure.
type GetFilePaymentsFilePaymentIDReportFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFilePaymentsFilePaymentIDReportFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFilePaymentsFilePaymentIDReportFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFilePaymentsFilePaymentIDReportFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFilePaymentsFilePaymentIDReportFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFilePaymentsFilePaymentIDReportFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFilePaymentsFilePaymentIDReportFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetFilePaymentsFilePaymentIDReportFileMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetFilePaymentsFilePaymentIDReportFileNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFilePaymentsFilePaymentIDReportFileTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFilePaymentsFilePaymentIDReportFileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFilePaymentsFilePaymentIDReportFileOK creates a GetFilePaymentsFilePaymentIDReportFileOK with default headers values
func NewGetFilePaymentsFilePaymentIDReportFileOK() *GetFilePaymentsFilePaymentIDReportFileOK {
	return &GetFilePaymentsFilePaymentIDReportFileOK{}
}

/* GetFilePaymentsFilePaymentIDReportFileOK describes a response with status code 200, with default header values.

File Payments Read
*/
type GetFilePaymentsFilePaymentIDReportFileOK struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload models.File
}

func (o *GetFilePaymentsFilePaymentIDReportFileOK) Error() string {
	return fmt.Sprintf("[GET /file-payments/{FilePaymentId}/report-file][%d] getFilePaymentsFilePaymentIdReportFileOK  %+v", 200, o.Payload)
}
func (o *GetFilePaymentsFilePaymentIDReportFileOK) GetPayload() models.File {
	return o.Payload
}

func (o *GetFilePaymentsFilePaymentIDReportFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentsFilePaymentIDReportFileBadRequest creates a GetFilePaymentsFilePaymentIDReportFileBadRequest with default headers values
func NewGetFilePaymentsFilePaymentIDReportFileBadRequest() *GetFilePaymentsFilePaymentIDReportFileBadRequest {
	return &GetFilePaymentsFilePaymentIDReportFileBadRequest{}
}

/* GetFilePaymentsFilePaymentIDReportFileBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetFilePaymentsFilePaymentIDReportFileBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetFilePaymentsFilePaymentIDReportFileBadRequest) Error() string {
	return fmt.Sprintf("[GET /file-payments/{FilePaymentId}/report-file][%d] getFilePaymentsFilePaymentIdReportFileBadRequest  %+v", 400, o.Payload)
}
func (o *GetFilePaymentsFilePaymentIDReportFileBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetFilePaymentsFilePaymentIDReportFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentsFilePaymentIDReportFileUnauthorized creates a GetFilePaymentsFilePaymentIDReportFileUnauthorized with default headers values
func NewGetFilePaymentsFilePaymentIDReportFileUnauthorized() *GetFilePaymentsFilePaymentIDReportFileUnauthorized {
	return &GetFilePaymentsFilePaymentIDReportFileUnauthorized{}
}

/* GetFilePaymentsFilePaymentIDReportFileUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetFilePaymentsFilePaymentIDReportFileUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetFilePaymentsFilePaymentIDReportFileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /file-payments/{FilePaymentId}/report-file][%d] getFilePaymentsFilePaymentIdReportFileUnauthorized ", 401)
}

func (o *GetFilePaymentsFilePaymentIDReportFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetFilePaymentsFilePaymentIDReportFileForbidden creates a GetFilePaymentsFilePaymentIDReportFileForbidden with default headers values
func NewGetFilePaymentsFilePaymentIDReportFileForbidden() *GetFilePaymentsFilePaymentIDReportFileForbidden {
	return &GetFilePaymentsFilePaymentIDReportFileForbidden{}
}

/* GetFilePaymentsFilePaymentIDReportFileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetFilePaymentsFilePaymentIDReportFileForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetFilePaymentsFilePaymentIDReportFileForbidden) Error() string {
	return fmt.Sprintf("[GET /file-payments/{FilePaymentId}/report-file][%d] getFilePaymentsFilePaymentIdReportFileForbidden  %+v", 403, o.Payload)
}
func (o *GetFilePaymentsFilePaymentIDReportFileForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetFilePaymentsFilePaymentIDReportFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentsFilePaymentIDReportFileNotFound creates a GetFilePaymentsFilePaymentIDReportFileNotFound with default headers values
func NewGetFilePaymentsFilePaymentIDReportFileNotFound() *GetFilePaymentsFilePaymentIDReportFileNotFound {
	return &GetFilePaymentsFilePaymentIDReportFileNotFound{}
}

/* GetFilePaymentsFilePaymentIDReportFileNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetFilePaymentsFilePaymentIDReportFileNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetFilePaymentsFilePaymentIDReportFileNotFound) Error() string {
	return fmt.Sprintf("[GET /file-payments/{FilePaymentId}/report-file][%d] getFilePaymentsFilePaymentIdReportFileNotFound ", 404)
}

func (o *GetFilePaymentsFilePaymentIDReportFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetFilePaymentsFilePaymentIDReportFileMethodNotAllowed creates a GetFilePaymentsFilePaymentIDReportFileMethodNotAllowed with default headers values
func NewGetFilePaymentsFilePaymentIDReportFileMethodNotAllowed() *GetFilePaymentsFilePaymentIDReportFileMethodNotAllowed {
	return &GetFilePaymentsFilePaymentIDReportFileMethodNotAllowed{}
}

/* GetFilePaymentsFilePaymentIDReportFileMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetFilePaymentsFilePaymentIDReportFileMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetFilePaymentsFilePaymentIDReportFileMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /file-payments/{FilePaymentId}/report-file][%d] getFilePaymentsFilePaymentIdReportFileMethodNotAllowed ", 405)
}

func (o *GetFilePaymentsFilePaymentIDReportFileMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetFilePaymentsFilePaymentIDReportFileNotAcceptable creates a GetFilePaymentsFilePaymentIDReportFileNotAcceptable with default headers values
func NewGetFilePaymentsFilePaymentIDReportFileNotAcceptable() *GetFilePaymentsFilePaymentIDReportFileNotAcceptable {
	return &GetFilePaymentsFilePaymentIDReportFileNotAcceptable{}
}

/* GetFilePaymentsFilePaymentIDReportFileNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type GetFilePaymentsFilePaymentIDReportFileNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetFilePaymentsFilePaymentIDReportFileNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /file-payments/{FilePaymentId}/report-file][%d] getFilePaymentsFilePaymentIdReportFileNotAcceptable ", 406)
}

func (o *GetFilePaymentsFilePaymentIDReportFileNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetFilePaymentsFilePaymentIDReportFileTooManyRequests creates a GetFilePaymentsFilePaymentIDReportFileTooManyRequests with default headers values
func NewGetFilePaymentsFilePaymentIDReportFileTooManyRequests() *GetFilePaymentsFilePaymentIDReportFileTooManyRequests {
	return &GetFilePaymentsFilePaymentIDReportFileTooManyRequests{}
}

/* GetFilePaymentsFilePaymentIDReportFileTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetFilePaymentsFilePaymentIDReportFileTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetFilePaymentsFilePaymentIDReportFileTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /file-payments/{FilePaymentId}/report-file][%d] getFilePaymentsFilePaymentIdReportFileTooManyRequests ", 429)
}

func (o *GetFilePaymentsFilePaymentIDReportFileTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetFilePaymentsFilePaymentIDReportFileInternalServerError creates a GetFilePaymentsFilePaymentIDReportFileInternalServerError with default headers values
func NewGetFilePaymentsFilePaymentIDReportFileInternalServerError() *GetFilePaymentsFilePaymentIDReportFileInternalServerError {
	return &GetFilePaymentsFilePaymentIDReportFileInternalServerError{}
}

/* GetFilePaymentsFilePaymentIDReportFileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFilePaymentsFilePaymentIDReportFileInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetFilePaymentsFilePaymentIDReportFileInternalServerError) Error() string {
	return fmt.Sprintf("[GET /file-payments/{FilePaymentId}/report-file][%d] getFilePaymentsFilePaymentIdReportFileInternalServerError  %+v", 500, o.Payload)
}
func (o *GetFilePaymentsFilePaymentIDReportFileInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetFilePaymentsFilePaymentIDReportFileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
