// Code generated by go-swagger; DO NOT EDIT.

package international_scheduled_payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/models"
)

// GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationReader is a Reader for the GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmation structure.
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK creates a GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK with default headers values
func NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK() *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK {
	return &GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK{}
}

/* GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK describes a response with status code 200, with default header values.

International Scheduled Payment Consents Read
*/
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBWriteFundsConfirmationResponse1
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payment-consents/{ConsentId}/funds-confirmation][%d] getInternationalScheduledPaymentConsentsConsentIdFundsConfirmationOK  %+v", 200, o.Payload)
}
func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK) GetPayload() *models.OBWriteFundsConfirmationResponse1 {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBWriteFundsConfirmationResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest creates a GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest with default headers values
func NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest() *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest {
	return &GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest{}
}

/* GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payment-consents/{ConsentId}/funds-confirmation][%d] getInternationalScheduledPaymentConsentsConsentIdFundsConfirmationBadRequest  %+v", 400, o.Payload)
}
func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized creates a GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized with default headers values
func NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized() *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized {
	return &GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized{}
}

/* GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payment-consents/{ConsentId}/funds-confirmation][%d] getInternationalScheduledPaymentConsentsConsentIdFundsConfirmationUnauthorized ", 401)
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden creates a GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden with default headers values
func NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden() *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden {
	return &GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden{}
}

/* GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payment-consents/{ConsentId}/funds-confirmation][%d] getInternationalScheduledPaymentConsentsConsentIdFundsConfirmationForbidden  %+v", 403, o.Payload)
}
func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound creates a GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound with default headers values
func NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound() *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound {
	return &GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound{}
}

/* GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payment-consents/{ConsentId}/funds-confirmation][%d] getInternationalScheduledPaymentConsentsConsentIdFundsConfirmationNotFound ", 404)
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed creates a GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed with default headers values
func NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed() *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed {
	return &GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed{}
}

/* GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payment-consents/{ConsentId}/funds-confirmation][%d] getInternationalScheduledPaymentConsentsConsentIdFundsConfirmationMethodNotAllowed ", 405)
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable creates a GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable with default headers values
func NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable() *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable {
	return &GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable{}
}

/* GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payment-consents/{ConsentId}/funds-confirmation][%d] getInternationalScheduledPaymentConsentsConsentIdFundsConfirmationNotAcceptable ", 406)
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests creates a GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests with default headers values
func NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests() *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests {
	return &GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests{}
}

/* GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payment-consents/{ConsentId}/funds-confirmation][%d] getInternationalScheduledPaymentConsentsConsentIdFundsConfirmationTooManyRequests ", 429)
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError creates a GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError with default headers values
func NewGetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError() *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError {
	return &GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError{}
}

/* GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payment-consents/{ConsentId}/funds-confirmation][%d] getInternationalScheduledPaymentConsentsConsentIdFundsConfirmationInternalServerError  %+v", 500, o.Payload)
}
func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentsConsentIDFundsConfirmationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
