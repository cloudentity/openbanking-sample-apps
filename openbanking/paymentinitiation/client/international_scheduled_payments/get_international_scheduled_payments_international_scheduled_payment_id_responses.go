// Code generated by go-swagger; DO NOT EDIT.

package international_scheduled_payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/models"
)

// GetInternationalScheduledPaymentsInternationalScheduledPaymentIDReader is a Reader for the GetInternationalScheduledPaymentsInternationalScheduledPaymentID structure.
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK creates a GetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK with default headers values
func NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK() *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK {
	return &GetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK{}
}

/* GetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK describes a response with status code 200, with default header values.

International Scheduled Payments Read
*/
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBWriteInternationalScheduledResponse6
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payments/{InternationalScheduledPaymentId}][%d] getInternationalScheduledPaymentsInternationalScheduledPaymentIdOK  %+v", 200, o.Payload)
}
func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK) GetPayload() *models.OBWriteInternationalScheduledResponse6 {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBWriteInternationalScheduledResponse6)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest creates a GetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest with default headers values
func NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest() *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest {
	return &GetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest{}
}

/* GetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payments/{InternationalScheduledPaymentId}][%d] getInternationalScheduledPaymentsInternationalScheduledPaymentIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized creates a GetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized with default headers values
func NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized() *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized {
	return &GetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized{}
}

/* GetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payments/{InternationalScheduledPaymentId}][%d] getInternationalScheduledPaymentsInternationalScheduledPaymentIdUnauthorized ", 401)
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden creates a GetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden with default headers values
func NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden() *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden {
	return &GetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden{}
}

/* GetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payments/{InternationalScheduledPaymentId}][%d] getInternationalScheduledPaymentsInternationalScheduledPaymentIdForbidden  %+v", 403, o.Payload)
}
func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound creates a GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound with default headers values
func NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound() *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound {
	return &GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound{}
}

/* GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payments/{InternationalScheduledPaymentId}][%d] getInternationalScheduledPaymentsInternationalScheduledPaymentIdNotFound ", 404)
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed creates a GetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed with default headers values
func NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed() *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed {
	return &GetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed{}
}

/* GetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payments/{InternationalScheduledPaymentId}][%d] getInternationalScheduledPaymentsInternationalScheduledPaymentIdMethodNotAllowed ", 405)
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable creates a GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable with default headers values
func NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable() *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable {
	return &GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable{}
}

/* GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payments/{InternationalScheduledPaymentId}][%d] getInternationalScheduledPaymentsInternationalScheduledPaymentIdNotAcceptable ", 406)
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests creates a GetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests with default headers values
func NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests() *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests {
	return &GetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests{}
}

/* GetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payments/{InternationalScheduledPaymentId}][%d] getInternationalScheduledPaymentsInternationalScheduledPaymentIdTooManyRequests ", 429)
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError creates a GetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError with default headers values
func NewGetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError() *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError {
	return &GetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError{}
}

/* GetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /international-scheduled-payments/{InternationalScheduledPaymentId}][%d] getInternationalScheduledPaymentsInternationalScheduledPaymentIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentsInternationalScheduledPaymentIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
