// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/client/domestic_payments"
	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/client/domestic_scheduled_payments"
	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/client/domestic_standing_orders"
	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/client/file_payments"
	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/client/international_payments"
	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/client/international_scheduled_payments"
	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/client/international_standing_orders"
	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/client/payment_details"
)

// Default openbanking payments client HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/open-banking/v3.1/pisp"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new openbanking payments client HTTP client.
func NewHTTPClient(formats strfmt.Registry) *OpenbankingPaymentsClient {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new openbanking payments client HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *OpenbankingPaymentsClient {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new openbanking payments client client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *OpenbankingPaymentsClient {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(OpenbankingPaymentsClient)
	cli.Transport = transport
	cli.DomesticPayments = domestic_payments.New(transport, formats)
	cli.DomesticScheduledPayments = domestic_scheduled_payments.New(transport, formats)
	cli.DomesticStandingOrders = domestic_standing_orders.New(transport, formats)
	cli.FilePayments = file_payments.New(transport, formats)
	cli.InternationalPayments = international_payments.New(transport, formats)
	cli.InternationalScheduledPayments = international_scheduled_payments.New(transport, formats)
	cli.InternationalStandingOrders = international_standing_orders.New(transport, formats)
	cli.PaymentDetails = payment_details.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// OpenbankingPaymentsClient is a client for openbanking payments client
type OpenbankingPaymentsClient struct {
	DomesticPayments domestic_payments.ClientService

	DomesticScheduledPayments domestic_scheduled_payments.ClientService

	DomesticStandingOrders domestic_standing_orders.ClientService

	FilePayments file_payments.ClientService

	InternationalPayments international_payments.ClientService

	InternationalScheduledPayments international_scheduled_payments.ClientService

	InternationalStandingOrders international_standing_orders.ClientService

	PaymentDetails payment_details.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *OpenbankingPaymentsClient) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.DomesticPayments.SetTransport(transport)
	c.DomesticScheduledPayments.SetTransport(transport)
	c.DomesticStandingOrders.SetTransport(transport)
	c.FilePayments.SetTransport(transport)
	c.InternationalPayments.SetTransport(transport)
	c.InternationalScheduledPayments.SetTransport(transport)
	c.InternationalStandingOrders.SetTransport(transport)
	c.PaymentDetails.SetTransport(transport)
}
