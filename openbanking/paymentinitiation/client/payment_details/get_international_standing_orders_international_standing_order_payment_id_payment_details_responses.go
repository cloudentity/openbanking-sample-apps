// Code generated by go-swagger; DO NOT EDIT.

package payment_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/models"
)

// GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsReader is a Reader for the GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetails structure.
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK creates a GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK with default headers values
func NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK() *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK {
	return &GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK{}
}

/* GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK describes a response with status code 200, with default header values.

Payment Details Read
*/
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBWritePaymentDetailsResponse1
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK) Error() string {
	return fmt.Sprintf("[GET /international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details][%d] getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsOK  %+v", 200, o.Payload)
}
func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK) GetPayload() *models.OBWritePaymentDetailsResponse1 {
	return o.Payload
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBWritePaymentDetailsResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest creates a GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest with default headers values
func NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest() *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest {
	return &GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest{}
}

/* GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details][%d] getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsBadRequest  %+v", 400, o.Payload)
}
func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized creates a GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized with default headers values
func NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized() *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized {
	return &GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized{}
}

/* GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details][%d] getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsUnauthorized ", 401)
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden creates a GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden with default headers values
func NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden() *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden {
	return &GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden{}
}

/* GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details][%d] getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsForbidden  %+v", 403, o.Payload)
}
func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound creates a GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound with default headers values
func NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound() *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound {
	return &GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound{}
}

/* GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details][%d] getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsNotFound ", 404)
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed creates a GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed with default headers values
func NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed() *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed {
	return &GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed{}
}

/* GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details][%d] getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsMethodNotAllowed ", 405)
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable creates a GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable with default headers values
func NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable() *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable {
	return &GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable{}
}

/* GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details][%d] getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsNotAcceptable ", 406)
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests creates a GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests with default headers values
func NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests() *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests {
	return &GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests{}
}

/* GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details][%d] getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsTooManyRequests ", 429)
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError creates a GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError with default headers values
func NewGetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError() *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError {
	return &GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError{}
}

/* GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details][%d] getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
