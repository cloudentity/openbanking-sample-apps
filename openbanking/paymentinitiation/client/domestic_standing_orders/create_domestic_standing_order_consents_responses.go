// Code generated by go-swagger; DO NOT EDIT.

package domestic_standing_orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/models"
)

// CreateDomesticStandingOrderConsentsReader is a Reader for the CreateDomesticStandingOrderConsents structure.
type CreateDomesticStandingOrderConsentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDomesticStandingOrderConsentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateDomesticStandingOrderConsentsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDomesticStandingOrderConsentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateDomesticStandingOrderConsentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDomesticStandingOrderConsentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateDomesticStandingOrderConsentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateDomesticStandingOrderConsentsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateDomesticStandingOrderConsentsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateDomesticStandingOrderConsentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateDomesticStandingOrderConsentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDomesticStandingOrderConsentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateDomesticStandingOrderConsentsCreated creates a CreateDomesticStandingOrderConsentsCreated with default headers values
func NewCreateDomesticStandingOrderConsentsCreated() *CreateDomesticStandingOrderConsentsCreated {
	return &CreateDomesticStandingOrderConsentsCreated{}
}

/* CreateDomesticStandingOrderConsentsCreated describes a response with status code 201, with default header values.

Domestic Standing Order Consents Created
*/
type CreateDomesticStandingOrderConsentsCreated struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBWriteDomesticStandingOrderConsentResponse6
}

func (o *CreateDomesticStandingOrderConsentsCreated) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsCreated  %+v", 201, o.Payload)
}
func (o *CreateDomesticStandingOrderConsentsCreated) GetPayload() *models.OBWriteDomesticStandingOrderConsentResponse6 {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBWriteDomesticStandingOrderConsentResponse6)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentsBadRequest creates a CreateDomesticStandingOrderConsentsBadRequest with default headers values
func NewCreateDomesticStandingOrderConsentsBadRequest() *CreateDomesticStandingOrderConsentsBadRequest {
	return &CreateDomesticStandingOrderConsentsBadRequest{}
}

/* CreateDomesticStandingOrderConsentsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateDomesticStandingOrderConsentsBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *CreateDomesticStandingOrderConsentsBadRequest) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsBadRequest  %+v", 400, o.Payload)
}
func (o *CreateDomesticStandingOrderConsentsBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentsUnauthorized creates a CreateDomesticStandingOrderConsentsUnauthorized with default headers values
func NewCreateDomesticStandingOrderConsentsUnauthorized() *CreateDomesticStandingOrderConsentsUnauthorized {
	return &CreateDomesticStandingOrderConsentsUnauthorized{}
}

/* CreateDomesticStandingOrderConsentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateDomesticStandingOrderConsentsUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *CreateDomesticStandingOrderConsentsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsUnauthorized ", 401)
}

func (o *CreateDomesticStandingOrderConsentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentsForbidden creates a CreateDomesticStandingOrderConsentsForbidden with default headers values
func NewCreateDomesticStandingOrderConsentsForbidden() *CreateDomesticStandingOrderConsentsForbidden {
	return &CreateDomesticStandingOrderConsentsForbidden{}
}

/* CreateDomesticStandingOrderConsentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateDomesticStandingOrderConsentsForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *CreateDomesticStandingOrderConsentsForbidden) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsForbidden  %+v", 403, o.Payload)
}
func (o *CreateDomesticStandingOrderConsentsForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentsNotFound creates a CreateDomesticStandingOrderConsentsNotFound with default headers values
func NewCreateDomesticStandingOrderConsentsNotFound() *CreateDomesticStandingOrderConsentsNotFound {
	return &CreateDomesticStandingOrderConsentsNotFound{}
}

/* CreateDomesticStandingOrderConsentsNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateDomesticStandingOrderConsentsNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *CreateDomesticStandingOrderConsentsNotFound) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsNotFound ", 404)
}

func (o *CreateDomesticStandingOrderConsentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentsMethodNotAllowed creates a CreateDomesticStandingOrderConsentsMethodNotAllowed with default headers values
func NewCreateDomesticStandingOrderConsentsMethodNotAllowed() *CreateDomesticStandingOrderConsentsMethodNotAllowed {
	return &CreateDomesticStandingOrderConsentsMethodNotAllowed{}
}

/* CreateDomesticStandingOrderConsentsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateDomesticStandingOrderConsentsMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *CreateDomesticStandingOrderConsentsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsMethodNotAllowed ", 405)
}

func (o *CreateDomesticStandingOrderConsentsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentsNotAcceptable creates a CreateDomesticStandingOrderConsentsNotAcceptable with default headers values
func NewCreateDomesticStandingOrderConsentsNotAcceptable() *CreateDomesticStandingOrderConsentsNotAcceptable {
	return &CreateDomesticStandingOrderConsentsNotAcceptable{}
}

/* CreateDomesticStandingOrderConsentsNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type CreateDomesticStandingOrderConsentsNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *CreateDomesticStandingOrderConsentsNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsNotAcceptable ", 406)
}

func (o *CreateDomesticStandingOrderConsentsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentsUnsupportedMediaType creates a CreateDomesticStandingOrderConsentsUnsupportedMediaType with default headers values
func NewCreateDomesticStandingOrderConsentsUnsupportedMediaType() *CreateDomesticStandingOrderConsentsUnsupportedMediaType {
	return &CreateDomesticStandingOrderConsentsUnsupportedMediaType{}
}

/* CreateDomesticStandingOrderConsentsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type
*/
type CreateDomesticStandingOrderConsentsUnsupportedMediaType struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *CreateDomesticStandingOrderConsentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsUnsupportedMediaType ", 415)
}

func (o *CreateDomesticStandingOrderConsentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentsTooManyRequests creates a CreateDomesticStandingOrderConsentsTooManyRequests with default headers values
func NewCreateDomesticStandingOrderConsentsTooManyRequests() *CreateDomesticStandingOrderConsentsTooManyRequests {
	return &CreateDomesticStandingOrderConsentsTooManyRequests{}
}

/* CreateDomesticStandingOrderConsentsTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CreateDomesticStandingOrderConsentsTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *CreateDomesticStandingOrderConsentsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsTooManyRequests ", 429)
}

func (o *CreateDomesticStandingOrderConsentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentsInternalServerError creates a CreateDomesticStandingOrderConsentsInternalServerError with default headers values
func NewCreateDomesticStandingOrderConsentsInternalServerError() *CreateDomesticStandingOrderConsentsInternalServerError {
	return &CreateDomesticStandingOrderConsentsInternalServerError{}
}

/* CreateDomesticStandingOrderConsentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateDomesticStandingOrderConsentsInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *CreateDomesticStandingOrderConsentsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /domestic-standing-order-consents][%d] createDomesticStandingOrderConsentsInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateDomesticStandingOrderConsentsInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
