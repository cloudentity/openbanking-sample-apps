// Code generated by go-swagger; DO NOT EDIT.

package domestic_standing_orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/openbanking-sample-apps/openbanking/paymentinitiation/models"
)

// GetDomesticStandingOrdersDomesticStandingOrderIDReader is a Reader for the GetDomesticStandingOrdersDomesticStandingOrderID structure.
type GetDomesticStandingOrdersDomesticStandingOrderIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomesticStandingOrdersDomesticStandingOrderIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDomesticStandingOrdersDomesticStandingOrderIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDomesticStandingOrdersDomesticStandingOrderIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDomesticStandingOrdersDomesticStandingOrderIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDomesticStandingOrdersDomesticStandingOrderIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDomesticStandingOrdersDomesticStandingOrderIDOK creates a GetDomesticStandingOrdersDomesticStandingOrderIDOK with default headers values
func NewGetDomesticStandingOrdersDomesticStandingOrderIDOK() *GetDomesticStandingOrdersDomesticStandingOrderIDOK {
	return &GetDomesticStandingOrdersDomesticStandingOrderIDOK{}
}

/* GetDomesticStandingOrdersDomesticStandingOrderIDOK describes a response with status code 200, with default header values.

Domestic Standing Orders Read
*/
type GetDomesticStandingOrdersDomesticStandingOrderIDOK struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBWriteDomesticStandingOrderResponse6
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDOK) Error() string {
	return fmt.Sprintf("[GET /domestic-standing-orders/{DomesticStandingOrderId}][%d] getDomesticStandingOrdersDomesticStandingOrderIdOK  %+v", 200, o.Payload)
}
func (o *GetDomesticStandingOrdersDomesticStandingOrderIDOK) GetPayload() *models.OBWriteDomesticStandingOrderResponse6 {
	return o.Payload
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBWriteDomesticStandingOrderResponse6)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticStandingOrdersDomesticStandingOrderIDBadRequest creates a GetDomesticStandingOrdersDomesticStandingOrderIDBadRequest with default headers values
func NewGetDomesticStandingOrdersDomesticStandingOrderIDBadRequest() *GetDomesticStandingOrdersDomesticStandingOrderIDBadRequest {
	return &GetDomesticStandingOrdersDomesticStandingOrderIDBadRequest{}
}

/* GetDomesticStandingOrdersDomesticStandingOrderIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetDomesticStandingOrdersDomesticStandingOrderIDBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /domestic-standing-orders/{DomesticStandingOrderId}][%d] getDomesticStandingOrdersDomesticStandingOrderIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetDomesticStandingOrdersDomesticStandingOrderIDBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized creates a GetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized with default headers values
func NewGetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized() *GetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized {
	return &GetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized{}
}

/* GetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /domestic-standing-orders/{DomesticStandingOrderId}][%d] getDomesticStandingOrdersDomesticStandingOrderIdUnauthorized ", 401)
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDomesticStandingOrdersDomesticStandingOrderIDForbidden creates a GetDomesticStandingOrdersDomesticStandingOrderIDForbidden with default headers values
func NewGetDomesticStandingOrdersDomesticStandingOrderIDForbidden() *GetDomesticStandingOrdersDomesticStandingOrderIDForbidden {
	return &GetDomesticStandingOrdersDomesticStandingOrderIDForbidden{}
}

/* GetDomesticStandingOrdersDomesticStandingOrderIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDomesticStandingOrdersDomesticStandingOrderIDForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDForbidden) Error() string {
	return fmt.Sprintf("[GET /domestic-standing-orders/{DomesticStandingOrderId}][%d] getDomesticStandingOrdersDomesticStandingOrderIdForbidden  %+v", 403, o.Payload)
}
func (o *GetDomesticStandingOrdersDomesticStandingOrderIDForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticStandingOrdersDomesticStandingOrderIDNotFound creates a GetDomesticStandingOrdersDomesticStandingOrderIDNotFound with default headers values
func NewGetDomesticStandingOrdersDomesticStandingOrderIDNotFound() *GetDomesticStandingOrdersDomesticStandingOrderIDNotFound {
	return &GetDomesticStandingOrdersDomesticStandingOrderIDNotFound{}
}

/* GetDomesticStandingOrdersDomesticStandingOrderIDNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetDomesticStandingOrdersDomesticStandingOrderIDNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDNotFound) Error() string {
	return fmt.Sprintf("[GET /domestic-standing-orders/{DomesticStandingOrderId}][%d] getDomesticStandingOrdersDomesticStandingOrderIdNotFound ", 404)
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed creates a GetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed with default headers values
func NewGetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed() *GetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed {
	return &GetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed{}
}

/* GetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /domestic-standing-orders/{DomesticStandingOrderId}][%d] getDomesticStandingOrdersDomesticStandingOrderIdMethodNotAllowed ", 405)
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable creates a GetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable with default headers values
func NewGetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable() *GetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable {
	return &GetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable{}
}

/* GetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type GetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /domestic-standing-orders/{DomesticStandingOrderId}][%d] getDomesticStandingOrdersDomesticStandingOrderIdNotAcceptable ", 406)
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests creates a GetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests with default headers values
func NewGetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests() *GetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests {
	return &GetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests{}
}

/* GetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /domestic-standing-orders/{DomesticStandingOrderId}][%d] getDomesticStandingOrdersDomesticStandingOrderIdTooManyRequests ", 429)
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError creates a GetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError with default headers values
func NewGetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError() *GetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError {
	return &GetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError{}
}

/* GetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /domestic-standing-orders/{DomesticStandingOrderId}][%d] getDomesticStandingOrdersDomesticStandingOrderIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetDomesticStandingOrdersDomesticStandingOrderIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
