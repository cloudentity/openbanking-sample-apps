// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/openbanking-sample-apps/openbanking/accountinformation/models"
)

// GetAccountsAccountIDProductReader is a Reader for the GetAccountsAccountIDProduct structure.
type GetAccountsAccountIDProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountsAccountIDProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountsAccountIDProductOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountsAccountIDProductBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAccountsAccountIDProductUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountsAccountIDProductForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountsAccountIDProductNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAccountsAccountIDProductMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetAccountsAccountIDProductNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAccountsAccountIDProductTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAccountsAccountIDProductInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAccountsAccountIDProductOK creates a GetAccountsAccountIDProductOK with default headers values
func NewGetAccountsAccountIDProductOK() *GetAccountsAccountIDProductOK {
	return &GetAccountsAccountIDProductOK{}
}

/* GetAccountsAccountIDProductOK describes a response with status code 200, with default header values.

Products Read
*/
type GetAccountsAccountIDProductOK struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBReadProduct2
}

func (o *GetAccountsAccountIDProductOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{AccountId}/product][%d] getAccountsAccountIdProductOK  %+v", 200, o.Payload)
}
func (o *GetAccountsAccountIDProductOK) GetPayload() *models.OBReadProduct2 {
	return o.Payload
}

func (o *GetAccountsAccountIDProductOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBReadProduct2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsAccountIDProductBadRequest creates a GetAccountsAccountIDProductBadRequest with default headers values
func NewGetAccountsAccountIDProductBadRequest() *GetAccountsAccountIDProductBadRequest {
	return &GetAccountsAccountIDProductBadRequest{}
}

/* GetAccountsAccountIDProductBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetAccountsAccountIDProductBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBErrorResponse1
}

func (o *GetAccountsAccountIDProductBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{AccountId}/product][%d] getAccountsAccountIdProductBadRequest  %+v", 400, o.Payload)
}
func (o *GetAccountsAccountIDProductBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetAccountsAccountIDProductBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsAccountIDProductUnauthorized creates a GetAccountsAccountIDProductUnauthorized with default headers values
func NewGetAccountsAccountIDProductUnauthorized() *GetAccountsAccountIDProductUnauthorized {
	return &GetAccountsAccountIDProductUnauthorized{}
}

/* GetAccountsAccountIDProductUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAccountsAccountIDProductUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetAccountsAccountIDProductUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{AccountId}/product][%d] getAccountsAccountIdProductUnauthorized ", 401)
}

func (o *GetAccountsAccountIDProductUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetAccountsAccountIDProductForbidden creates a GetAccountsAccountIDProductForbidden with default headers values
func NewGetAccountsAccountIDProductForbidden() *GetAccountsAccountIDProductForbidden {
	return &GetAccountsAccountIDProductForbidden{}
}

/* GetAccountsAccountIDProductForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAccountsAccountIDProductForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBErrorResponse1
}

func (o *GetAccountsAccountIDProductForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{AccountId}/product][%d] getAccountsAccountIdProductForbidden  %+v", 403, o.Payload)
}
func (o *GetAccountsAccountIDProductForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetAccountsAccountIDProductForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsAccountIDProductNotFound creates a GetAccountsAccountIDProductNotFound with default headers values
func NewGetAccountsAccountIDProductNotFound() *GetAccountsAccountIDProductNotFound {
	return &GetAccountsAccountIDProductNotFound{}
}

/* GetAccountsAccountIDProductNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetAccountsAccountIDProductNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetAccountsAccountIDProductNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{AccountId}/product][%d] getAccountsAccountIdProductNotFound ", 404)
}

func (o *GetAccountsAccountIDProductNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetAccountsAccountIDProductMethodNotAllowed creates a GetAccountsAccountIDProductMethodNotAllowed with default headers values
func NewGetAccountsAccountIDProductMethodNotAllowed() *GetAccountsAccountIDProductMethodNotAllowed {
	return &GetAccountsAccountIDProductMethodNotAllowed{}
}

/* GetAccountsAccountIDProductMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAccountsAccountIDProductMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetAccountsAccountIDProductMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /accounts/{AccountId}/product][%d] getAccountsAccountIdProductMethodNotAllowed ", 405)
}

func (o *GetAccountsAccountIDProductMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetAccountsAccountIDProductNotAcceptable creates a GetAccountsAccountIDProductNotAcceptable with default headers values
func NewGetAccountsAccountIDProductNotAcceptable() *GetAccountsAccountIDProductNotAcceptable {
	return &GetAccountsAccountIDProductNotAcceptable{}
}

/* GetAccountsAccountIDProductNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type GetAccountsAccountIDProductNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetAccountsAccountIDProductNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /accounts/{AccountId}/product][%d] getAccountsAccountIdProductNotAcceptable ", 406)
}

func (o *GetAccountsAccountIDProductNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetAccountsAccountIDProductTooManyRequests creates a GetAccountsAccountIDProductTooManyRequests with default headers values
func NewGetAccountsAccountIDProductTooManyRequests() *GetAccountsAccountIDProductTooManyRequests {
	return &GetAccountsAccountIDProductTooManyRequests{}
}

/* GetAccountsAccountIDProductTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetAccountsAccountIDProductTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

func (o *GetAccountsAccountIDProductTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{AccountId}/product][%d] getAccountsAccountIdProductTooManyRequests ", 429)
}

func (o *GetAccountsAccountIDProductTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewGetAccountsAccountIDProductInternalServerError creates a GetAccountsAccountIDProductInternalServerError with default headers values
func NewGetAccountsAccountIDProductInternalServerError() *GetAccountsAccountIDProductInternalServerError {
	return &GetAccountsAccountIDProductInternalServerError{}
}

/* GetAccountsAccountIDProductInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAccountsAccountIDProductInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	Payload *models.OBErrorResponse1
}

func (o *GetAccountsAccountIDProductInternalServerError) Error() string {
	return fmt.Sprintf("[GET /accounts/{AccountId}/product][%d] getAccountsAccountIdProductInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAccountsAccountIDProductInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *GetAccountsAccountIDProductInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
