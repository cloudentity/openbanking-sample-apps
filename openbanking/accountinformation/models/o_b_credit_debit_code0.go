// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OBCreditDebitCode0 Indicates whether the amount is a credit or a debit.
// Usage: A zero amount is considered to be a credit amount.
//
// swagger:model OBCreditDebitCode_0
type OBCreditDebitCode0 string

const (

	// OBCreditDebitCode0Credit captures enum value "Credit"
	OBCreditDebitCode0Credit OBCreditDebitCode0 = "Credit"

	// OBCreditDebitCode0Debit captures enum value "Debit"
	OBCreditDebitCode0Debit OBCreditDebitCode0 = "Debit"
)

// for schema
var oBCreditDebitCode0Enum []interface{}

func init() {
	var res []OBCreditDebitCode0
	if err := json.Unmarshal([]byte(`["Credit","Debit"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oBCreditDebitCode0Enum = append(oBCreditDebitCode0Enum, v)
	}
}

func (m OBCreditDebitCode0) validateOBCreditDebitCode0Enum(path, location string, value OBCreditDebitCode0) error {
	if err := validate.EnumCase(path, location, value, oBCreditDebitCode0Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this o b credit debit code 0
func (m OBCreditDebitCode0) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOBCreditDebitCode0Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this o b credit debit code 0 based on context it is used
func (m OBCreditDebitCode0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
