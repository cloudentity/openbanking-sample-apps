// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OBOverdraftFeeType1Code Overdraft fee type
//
// swagger:model OB_OverdraftFeeType1Code
type OBOverdraftFeeType1Code string

const (

	// OBOverdraftFeeType1CodeFBAO captures enum value "FBAO"
	OBOverdraftFeeType1CodeFBAO OBOverdraftFeeType1Code = "FBAO"

	// OBOverdraftFeeType1CodeFBAR captures enum value "FBAR"
	OBOverdraftFeeType1CodeFBAR OBOverdraftFeeType1Code = "FBAR"

	// OBOverdraftFeeType1CodeFBEB captures enum value "FBEB"
	OBOverdraftFeeType1CodeFBEB OBOverdraftFeeType1Code = "FBEB"

	// OBOverdraftFeeType1CodeFBIT captures enum value "FBIT"
	OBOverdraftFeeType1CodeFBIT OBOverdraftFeeType1Code = "FBIT"

	// OBOverdraftFeeType1CodeFBOR captures enum value "FBOR"
	OBOverdraftFeeType1CodeFBOR OBOverdraftFeeType1Code = "FBOR"

	// OBOverdraftFeeType1CodeFBOS captures enum value "FBOS"
	OBOverdraftFeeType1CodeFBOS OBOverdraftFeeType1Code = "FBOS"

	// OBOverdraftFeeType1CodeFBSC captures enum value "FBSC"
	OBOverdraftFeeType1CodeFBSC OBOverdraftFeeType1Code = "FBSC"

	// OBOverdraftFeeType1CodeFBTO captures enum value "FBTO"
	OBOverdraftFeeType1CodeFBTO OBOverdraftFeeType1Code = "FBTO"

	// OBOverdraftFeeType1CodeFBUB captures enum value "FBUB"
	OBOverdraftFeeType1CodeFBUB OBOverdraftFeeType1Code = "FBUB"

	// OBOverdraftFeeType1CodeFBUT captures enum value "FBUT"
	OBOverdraftFeeType1CodeFBUT OBOverdraftFeeType1Code = "FBUT"

	// OBOverdraftFeeType1CodeFTOT captures enum value "FTOT"
	OBOverdraftFeeType1CodeFTOT OBOverdraftFeeType1Code = "FTOT"

	// OBOverdraftFeeType1CodeFTUT captures enum value "FTUT"
	OBOverdraftFeeType1CodeFTUT OBOverdraftFeeType1Code = "FTUT"
)

// for schema
var oBOverdraftFeeType1CodeEnum []interface{}

func init() {
	var res []OBOverdraftFeeType1Code
	if err := json.Unmarshal([]byte(`["FBAO","FBAR","FBEB","FBIT","FBOR","FBOS","FBSC","FBTO","FBUB","FBUT","FTOT","FTUT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oBOverdraftFeeType1CodeEnum = append(oBOverdraftFeeType1CodeEnum, v)
	}
}

func (m OBOverdraftFeeType1Code) validateOBOverdraftFeeType1CodeEnum(path, location string, value OBOverdraftFeeType1Code) error {
	if err := validate.EnumCase(path, location, value, oBOverdraftFeeType1CodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this o b overdraft fee type1 code
func (m OBOverdraftFeeType1Code) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOBOverdraftFeeType1CodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this o b overdraft fee type1 code based on context it is used
func (m OBOverdraftFeeType1Code) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
