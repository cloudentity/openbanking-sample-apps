// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OBPartyRelationships1 The Party's relationships with other resources.
//
// swagger:model OBPartyRelationships1
type OBPartyRelationships1 struct {

	// account
	Account *OBPartyRelationships1Account `json:"Account,omitempty"`
}

// Validate validates this o b party relationships1
func (m *OBPartyRelationships1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OBPartyRelationships1) validateAccount(formats strfmt.Registry) error {
	if swag.IsZero(m.Account) { // not required
		return nil
	}

	if m.Account != nil {
		if err := m.Account.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Account")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this o b party relationships1 based on the context it is used
func (m *OBPartyRelationships1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAccount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OBPartyRelationships1) contextValidateAccount(ctx context.Context, formats strfmt.Registry) error {

	if m.Account != nil {
		if err := m.Account.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Account")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OBPartyRelationships1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OBPartyRelationships1) UnmarshalBinary(b []byte) error {
	var res OBPartyRelationships1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OBPartyRelationships1Account Relationship to the Account resource.
//
// swagger:model OBPartyRelationships1Account
type OBPartyRelationships1Account struct {

	// Unique identification as assigned by the ASPSP to uniquely identify the related resource.
	// Required: true
	// Max Length: 40
	// Min Length: 1
	ID *string `json:"Id"`

	// Absolute URI to the related resource.
	// Required: true
	// Format: uri
	Related *strfmt.URI `json:"Related"`
}

// Validate validates this o b party relationships1 account
func (m *OBPartyRelationships1Account) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRelated(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OBPartyRelationships1Account) validateID(formats strfmt.Registry) error {

	if err := validate.Required("Account"+"."+"Id", "body", m.ID); err != nil {
		return err
	}

	if err := validate.MinLength("Account"+"."+"Id", "body", *m.ID, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("Account"+"."+"Id", "body", *m.ID, 40); err != nil {
		return err
	}

	return nil
}

func (m *OBPartyRelationships1Account) validateRelated(formats strfmt.Registry) error {

	if err := validate.Required("Account"+"."+"Related", "body", m.Related); err != nil {
		return err
	}

	if err := validate.FormatOf("Account"+"."+"Related", "body", "uri", m.Related.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this o b party relationships1 account based on context it is used
func (m *OBPartyRelationships1Account) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OBPartyRelationships1Account) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OBPartyRelationships1Account) UnmarshalBinary(b []byte) error {
	var res OBPartyRelationships1Account
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
