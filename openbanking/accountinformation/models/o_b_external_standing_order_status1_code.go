// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OBExternalStandingOrderStatus1Code Specifies the status of the standing order in code form.
//
// swagger:model OBExternalStandingOrderStatus1Code
type OBExternalStandingOrderStatus1Code string

const (

	// OBExternalStandingOrderStatus1CodeActive captures enum value "Active"
	OBExternalStandingOrderStatus1CodeActive OBExternalStandingOrderStatus1Code = "Active"

	// OBExternalStandingOrderStatus1CodeInactive captures enum value "Inactive"
	OBExternalStandingOrderStatus1CodeInactive OBExternalStandingOrderStatus1Code = "Inactive"
)

// for schema
var oBExternalStandingOrderStatus1CodeEnum []interface{}

func init() {
	var res []OBExternalStandingOrderStatus1Code
	if err := json.Unmarshal([]byte(`["Active","Inactive"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oBExternalStandingOrderStatus1CodeEnum = append(oBExternalStandingOrderStatus1CodeEnum, v)
	}
}

func (m OBExternalStandingOrderStatus1Code) validateOBExternalStandingOrderStatus1CodeEnum(path, location string, value OBExternalStandingOrderStatus1Code) error {
	if err := validate.EnumCase(path, location, value, oBExternalStandingOrderStatus1CodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this o b external standing order status1 code
func (m OBExternalStandingOrderStatus1Code) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOBExternalStandingOrderStatus1CodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this o b external standing order status1 code based on context it is used
func (m OBExternalStandingOrderStatus1Code) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
