// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OBInterestFixedVariableType1Code Type of interest rate, Fixed or Variable
//
// swagger:model OB_InterestFixedVariableType1Code
type OBInterestFixedVariableType1Code string

const (

	// OBInterestFixedVariableType1CodeINFI captures enum value "INFI"
	OBInterestFixedVariableType1CodeINFI OBInterestFixedVariableType1Code = "INFI"

	// OBInterestFixedVariableType1CodeINVA captures enum value "INVA"
	OBInterestFixedVariableType1CodeINVA OBInterestFixedVariableType1Code = "INVA"
)

// for schema
var oBInterestFixedVariableType1CodeEnum []interface{}

func init() {
	var res []OBInterestFixedVariableType1Code
	if err := json.Unmarshal([]byte(`["INFI","INVA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oBInterestFixedVariableType1CodeEnum = append(oBInterestFixedVariableType1CodeEnum, v)
	}
}

func (m OBInterestFixedVariableType1Code) validateOBInterestFixedVariableType1CodeEnum(path, location string, value OBInterestFixedVariableType1Code) error {
	if err := validate.EnumCase(path, location, value, oBInterestFixedVariableType1CodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this o b interest fixed variable type1 code
func (m OBInterestFixedVariableType1Code) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOBInterestFixedVariableType1CodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this o b interest fixed variable type1 code based on context it is used
func (m OBInterestFixedVariableType1Code) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
